Assignment: Dojo & Ninjas (Shell)
1) Query: Create 3 new dojos
	>>> first_dojo = Dojo.objects.create(name='dojoone')
        >>> second_dojo = Dojo.objects.create(name='dojotwo')
        >>> third_dojo = Dojo.objects.create(name='dojothree')
        >>> Dojo.objects.all()
        <QuerySet [<Dojo: Dojo object (1)>, <Dojo: Dojo object (2)>, <Dojo: Dojo object (3)>]>

2) Query: Delete the 3 dojos you just created
	>>> first_dojo = Dojo.objects.get(id=1)
	>>> first_dojo.delete()
	(1, {'dojo_ninjas_app.Ninja': 0, 'dojo_ninjas_app.Dojo': 1})
	>>> second_dojo = Dojo.objects.get(id=2)
	>>> second_dojo.delete()
	(1, {'dojo_ninjas_app.Ninja': 0, 'dojo_ninjas_app.Dojo': 1})
	>>> third_dojo = Dojo.objects.get(id=3)
	>>> third_dojo.delete()
	(1, {'dojo_ninjas_app.Ninja': 0, 'dojo_ninjas_app.Dojo': 1})
	>>> Dojo.objects.all()
	<QuerySet []>

3) Query: Create 3 more dojos
	>>> fourth_dojo = Dojo.objects.create(name='dojofour')
	>>> fifth_dojo = Dojo.objects.create(name='dojofive')
	>>> sixth_dojo = Dojo.objects.create(name='dojosix')
	>>> Dojo.objects.all()
	<QuerySet [<Dojo: Dojo object (4)>, <Dojo: Dojo object (5)>, <Dojo: Dojo object (6)>]>

4) Query: Create 3 ninjas that belong to the first dojo
	this_dojo = Dojo.objects.get(id=4)
	>>> first_ninja = Ninja.objects.create(title="ninja_one", author=this_dojo)
	>>> second_ninja = Ninja.objects.create(title="ninja_two", author=this_dojo)
	>>> third_ninja = Ninja.objects.create(title="ninja__three", author=this_dojo)
		
5) Query: Create 3 ninjas that belong to the second dojo
	>>> second_dojo = Dojo.objects.get(id=5)
	>>> forth_ninja = Ninja.objects.create(title="ninja_four", author=second_dojo)
	>>> fifth_ninja = Ninja.objects.create(title="ninja_five", author=second_dojo)
	>>> sixth_ninja = Ninja.objects.create(title="ninja_six", author=second_dojo)

6) Query: Create 3 ninjas that belong to the third dojo
	>>> third_dojo = Dojo.objects.get(id=6)
	>>> seventh_ninja = Ninja.objects.create(title="ninja_seven", author=third_dojo)
	>>> eighth_ninja = Ninja.objects.create(title="ninja__eight", author=third_dojo)
	>>> ninth_ninja = Ninja.objects.create(title="ninja_ninth", author=third_dojo)		

7) Query: Retrieve all the ninjas from the first dojo
	>>> ninjas_in_dojo_one = Dojo.objects.get(id=4)
	>>> ninja_D1 = Ninja.objects.filter(author=ninjas_in_dojo_one)
	>>> ninja_D1
	<QuerySet [<Ninja: Ninja object (1)>, <Ninja: Ninja object (2)>, <Ninja: Ninja object (3)>]>

8) Query: Retrieve all the ninjas from the last dojo
	>>> ninjas_in_dojo_3 = Dojo.objects.get(id=6)
	>>> ninjas_D3 = Ninja.objects.filter(author=ninjas_in_dojo_3)
	>>> ninjas_D3
	<QuerySet [<Ninja: Ninja object (7)>, <Ninja: Ninja object (8)>, <Ninja: Ninja object (9)>]>	

9) Query: Retrieve the last ninjas dojo
	>>> Ninja.objects.last()
	<Ninja: Ninja object (9)>

---------Adding text field called "desc" to the Dojo class--------

The following occurred and was fixed after adding text field called "desc" to the Dojo Class:

(djangoPy3Env) C:\Users\Rick PC\Python_stack\django\django_intro\dojo_ninjas_proj>python manage.py makemigrations
You are trying to add a non-nullable field 'desc' to dojo without a default; we can't do that (the database needs something to populate existing rows).
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)
 2) Quit, and let me add a default in models.py
Select an option: 1
Please enter the default value now, as valid Python
The datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now
Type 'exit' to exit this prompt

(djangoPy3Env) C:\Users\Rick PC\Python_stack\django\django_intro\dojo_ninjas_proj>python manage.py migrate
Operations to perform:

10) Query: create and run the migration files to update the table in your database.
	   If needed, provide a default value of "old dojo". (I used "Done")
>>> "Done"
Migrations for 'dojo_ninjas_app':
  dojo_ninjas_app\migrations\0002_dojo_desc.py
    - Add field desc to dojo


11) Query: Create a new dojo
	>>> Dojo.objects.create(name="superninja", desc="ninjawarrior")